<TreeView x:Class="Waveface.Client.SourceTree"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          x:Name="UserControl"
          Background="{x:Null}"
          BorderBrush="{x:Null}"
          FontFamily="Segoe UI"
          FontSize="16"
          Grid.IsSharedSizeScope="True"
          ItemContainerStyle="{DynamicResource TreeViewItemStyle1}"
          ItemsSource="{Binding IsAsync=True}"
          MouseUp="UserControl_MouseUp"
          PreviewKeyDown="UserControl_PreviewKeyDown"
          VirtualizingStackPanel.IsVirtualizing="True"
          VirtualizingStackPanel.VirtualizationMode="Recycling"
          d:DesignHeight="392.26"
          d:DesignWidth="200"
          mc:Ignorable="d">

    <TreeView.Resources>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                         Color="Transparent" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                         Color="Transparent" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <BitmapImage x:Key="SelectedIcon"
                     CacheOption="OnLoad"
                     CreateOptions="IgnoreImageCache"
                     UriSource="pack://application:,,,/Resource/ico_folder_select.png" />
        <BitmapImage x:Key="UnSelectedIcon"
                     CacheOption="OnLoad"
                     CreateOptions="IgnoreImageCache"
                     UriSource="pack://application:,,,/Resource/ico_folder_unselect.png" />
        <BitmapImage x:Key="UnsortedIcon"
                     CacheOption="OnLoad"
                     CreateOptions="IgnoreImageCache"
                     UriSource="pack://application:,,,/Resource/ico_unsort_unselect.png" />
        <BitmapImage x:Key="UnsortedSelectedIcon"
                     CacheOption="OnLoad"
                     CreateOptions="IgnoreImageCache"
                     UriSource="pack://application:,,,/Resource/ico_unsort_select.png" />
        <BitmapImage x:Key="CycleIcon"
                     CacheOption="OnLoad"
                     CreateOptions="IgnoreImageCache"
                     UriSource="pack://application:,,,/Resource/arrow_circle_double.png" />
        <Style x:Key="TreeViewItemStyle1"
               TargetType="{x:Type TreeViewItem}">
            <EventSetter Event="UIElement.PreviewMouseLeftButtonDown"
                         Handler="TreeViewItem_PreviewMouseLeftButtonDown" />
            <Setter Property="Template" Value="{DynamicResource TreeViewItemControlTemplate1}" />
        </Style>
        <ControlTemplate x:Key="TreeViewItemControlTemplate1"
                         TargetType="{x:Type TreeViewItem}">
            <Grid x:Name="Item">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <DockPanel Grid.ColumnSpan="2">
                    <ToggleButton x:Name="Expander"
                                  Width="20"
                                  Background="Transparent"
                                  ClickMode="Press"
                                  IsChecked="{Binding IsExpanded,
                                                      RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="Width" Value="16" />
                                <Setter Property="Height" Value="16" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Width="16"
                                                    Height="16"
                                                    Background="{x:Null}"
                                                    BorderBrush="{x:Null}"
                                                    BorderThickness="1">
                                                <Path x:Name="ExpandPath"
                                                      Width="12.688"
                                                      Height="10.624"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M0.56189528,0.50000001 L0.50000001,10.123809 12.1875,5.625 z"
                                                      Fill="White"
                                                      Stroke="#FF818181" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="90" CenterX="6" CenterY="5" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter TargetName="ExpandPath" Property="Fill" Value="White" />
                                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF818181" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF27C7F7" />
                                                    <Setter TargetName="ExpandPath" Property="Fill" Value="#FFCCEEFB" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True" />
                                                        <Condition Property="IsChecked" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1CC4F7" />
                                                    <Setter TargetName="ExpandPath" Property="Fill" Value="#FF82DFFB" />
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="PART_Header"
                                          Content="{TemplateBinding Header}"
                                          ContentSource="Header"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </DockPanel>
                <ItemsPresenter x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter TargetName="Item" Property="Background" Value="#252525" />
                </Trigger>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="HasItems" Value="True">
                    <Setter TargetName="Expander" Property="Margin" Value="10,0,0,0" />
                </Trigger>
                <Trigger Property="HasItems" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="TreeViewItemControlTemplate2"
                         TargetType="{x:Type TreeViewItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="item"
                            Grid.Column="1"
                            Orientation="Horizontal">
                    <Image x:Name="icon"
                           Source="{StaticResource UnSelectedIcon}" />
                    <Label x:Name="sourceName"
                           Height="32"
                           VerticalContentAlignment="Center"
                           Content="Unsorted"
                           Foreground="White" />
                </StackPanel>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                               Path=IsSelected}"
                             Value="True">
                    <Setter TargetName="icon" Property="Source" Value="{StaticResource SelectedIcon}" />
                    <Setter TargetName="sourceName" Property="Foreground" Value="Yellow" />
                    <Setter TargetName="item" Property="Background" Value="Yellow" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </TreeView.Resources>

    <TreeView.ItemTemplate>
        <HierarchicalDataTemplate ItemsSource="{Binding Contents}">
            <StackPanel Orientation="Horizontal">
                <Label x:Name="item"
                       Content="{Binding Name}"
                       Foreground="#a8a8a8" />
                <Image x:Name="recvingIcon"
                       IsVisibleChanged="recvingIcon_IsVisibleChanged"
                       Source="{StaticResource CycleIcon}"
                       Visibility="{Binding IsRecving,
                                            Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
            <HierarchicalDataTemplate.ItemTemplate>
                <DataTemplate>
                    <Grid x:Name="item"
                          Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Image x:Name="icon"
                               Grid.Column="0"
                               Margin="10,0,0,0"
                               Source="{StaticResource UnSelectedIcon}" />

                        <Label x:Name="sourceName"
                               Grid.Column="1"
                               VerticalContentAlignment="Center"
                               Content="{Binding Name}"
                               Foreground="#a8a8a8" />

                        <Label x:Name="sourceCount"
                               Grid.Column="2"
                               HorizontalAlignment="Right"
                               VerticalContentAlignment="Center"
                               Content="{Binding ContentCount}"
                               Foreground="#a8a8a8" />
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                       Path=IsSelected}"
                                     Value="True">
                            <Setter TargetName="icon" Property="Source" Value="{StaticResource SelectedIcon}" />
                            <Setter TargetName="sourceName" Property="Foreground" Value="Black" />
                            <Setter TargetName="item" Property="Background" Value="#d5d5d5" />
                            <Setter TargetName="sourceCount" Property="Foreground" Value="Black" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=DataContext.ID}" Value="Unsorted" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsSelected}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="icon" Property="Source" Value="{StaticResource UnsortedIcon}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=DataContext.ID}" Value="Unsorted" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="icon" Property="Source" Value="{StaticResource UnsortedSelectedIcon}" />
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </HierarchicalDataTemplate.ItemTemplate>
        </HierarchicalDataTemplate>
    </TreeView.ItemTemplate>
</TreeView>