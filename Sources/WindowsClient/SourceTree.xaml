<TreeView xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          mc:Ignorable="d"
          x:Class="Waveface.Client.SourceTree"
          x:Name="UserControl"
          d:DesignWidth="200"
          d:DesignHeight="392.26"
          Background="{x:Null}"
          BorderBrush="{x:Null}"
          ItemsSource="{Binding IsAsync=True}"
          FontFamily="Segoe UI Light"
          FontSize="16"
          VirtualizingStackPanel.IsVirtualizing="True"
          VirtualizingStackPanel.VirtualizationMode="Recycling" ItemContainerStyle="{DynamicResource TreeViewItemStyle1}">

    <TreeView.Resources>
	        <SolidColorBrush Color="Transparent"
                        x:Key="{x:Static SystemColors.HighlightBrushKey}" />
       <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                        Color="Transparent" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style TargetType="{x:Type TreeViewItem}">
            <EventSetter Event="UIElement.PreviewMouseLeftButtonDown"
                         Handler="TreeViewItem_PreviewMouseLeftButtonDown" />
        </Style>
        <BitmapImage x:Key="SelectedIcon"
                     CreateOptions="IgnoreImageCache"
                     CacheOption="OnLoad"
                     UriSource="albumselected.png" />
        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
        	<EventSetter Event="UIElement.PreviewMouseLeftButtonDown"
        		Handler="TreeViewItem_PreviewMouseLeftButtonDown" />
        	<Setter Property="Template" Value="{DynamicResource TreeViewItemControlTemplate1}"/>
        </Style>
        <ControlTemplate x:Key="TreeViewItemControlTemplate1" TargetType="{x:Type TreeViewItem}">
        	<Grid x:Name="Item">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition MinWidth="19" Width="Auto"/>
        			<ColumnDefinition Width="Auto"/>
        			<ColumnDefinition Width="*"/>
        		</Grid.ColumnDefinitions>
        		<Grid.RowDefinitions>
        			<RowDefinition Height="Auto"/>
        			<RowDefinition/>
        		</Grid.RowDefinitions>
        		<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
        			<ToggleButton.Style>
        				<Style TargetType="{x:Type ToggleButton}">
        					<Setter Property="Focusable" Value="False"/>
        					<Setter Property="Width" Value="16"/>
        					<Setter Property="Height" Value="16"/>
        					<Setter Property="Template">
        						<Setter.Value>
        							<ControlTemplate TargetType="{x:Type ToggleButton}">
        								<Border Background="Transparent" Height="16"  Width="16" BorderBrush="White" BorderThickness="1">
        									<Path x:Name="ExpandPath" Data="M0.56189528,0.50000001 L0.50000001,10.123809 12.1875,5.625 z" Fill="White" Stroke="#FF818181" HorizontalAlignment="Center" VerticalAlignment="Center" Height="10.624" Width="12.688"/>
        								</Border>
        								<ControlTemplate.Triggers>
        									<Trigger Property="IsChecked" Value="True">
        										<Setter Property="RenderTransform" TargetName="ExpandPath">
        											<Setter.Value>
        												<RotateTransform Angle="90" CenterX="6" CenterY="5"/>
        											</Setter.Value>
        										</Setter>
        										<Setter Property="Fill" TargetName="ExpandPath" Value="White"/>
        										<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF818181"/>
        									</Trigger>
        									<Trigger Property="IsMouseOver" Value="True">
        										<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF27C7F7"/>
        										<Setter Property="Fill" TargetName="ExpandPath" Value="#FFCCEEFB"/>
        									</Trigger>
        									<MultiTrigger>
        										<MultiTrigger.Conditions>
        											<Condition Property="IsMouseOver" Value="True"/>
        											<Condition Property="IsChecked" Value="True"/>
        										</MultiTrigger.Conditions>
        										<Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1CC4F7"/>
        										<Setter Property="Fill" TargetName="ExpandPath" Value="#FF82DFFB"/>
        									</MultiTrigger>
        								</ControlTemplate.Triggers>
        							</ControlTemplate>
        						</Setter.Value>
        					</Setter>
        				</Style>
        			</ToggleButton.Style>
        		</ToggleButton>
        		<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
        			<ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        		</Border>
				<StackPanel Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="2">
				<TreeViewItem x:Name="unsortedItem" Header="Unsorted" Template="{DynamicResource TreeViewItemControlTemplate2}" PreviewMouseDown="unsortedItem_PreviewMouseDown"/>
        		<ItemsPresenter x:Name="ItemsHost"/>
				</StackPanel>
        	</Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="IsExpanded" Value="True">
        			<Setter Property="Background" TargetName="Item" Value="#FF1D1C1B"/>
        		</Trigger>
        		<Trigger Property="IsExpanded" Value="False">
        			<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
					<Setter Property="Visibility" TargetName="unsortedItem" Value="Collapsed"/>
        		</Trigger>
        		<Trigger Property="HasItems" Value="False">
        			<Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
					<Setter Property="Visibility" TargetName="unsortedItem" Value="Collapsed"/>
        		</Trigger>
        		<Trigger Property="IsSelected" Value="True">
        			<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        		</Trigger>
        		<MultiTrigger>
        			<MultiTrigger.Conditions>
        				<Condition Property="IsSelected" Value="True"/>
        				<Condition Property="IsSelectionActive" Value="False"/>
        			</MultiTrigger.Conditions>
        		</MultiTrigger>
        		<Trigger Property="IsEnabled" Value="False">
        			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="TreeViewItemControlTemplate2" TargetType="{x:Type TreeViewItem}">
        	<Grid>
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition MinWidth="19" Width="Auto"/>
        			<ColumnDefinition Width="Auto"/>
        			<ColumnDefinition Width="*"/>
        		</Grid.ColumnDefinitions>
        			        <StackPanel x:Name="item" Orientation="Horizontal" Width="2048" Grid.Column="1">
                        <Image x:Name="icon"
                               Source="album.png"/>
                        <Label x:Name="sourceName"
                               Content="Unsorted"
                               Foreground="White"
                               Height="32"
                               VerticalContentAlignment="Center"/>
                    </StackPanel>
        	</Grid>
        	<ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsSelected}"
                                     Value="True">
                            <Setter TargetName="icon"
                                    Property="Source"
                                    Value="{StaticResource SelectedIcon}" />
                            <Setter TargetName="sourceName"
                                    Property="Foreground"
                                    Value="Black"/>
							<Setter TargetName="item"
                                    Property="Background"
                                    Value="#FFD4D4D3" />
                        </DataTrigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>
    </TreeView.Resources>

    <TreeView.ItemTemplate>
        <HierarchicalDataTemplate ItemsSource="{Binding Contents}">
            <Label x:Name="item"
				   FontWeight="Bold"
                   Content="{Binding Name}"
                   Foreground="White"/>

            <HierarchicalDataTemplate.ItemTemplate>

                <DataTemplate>
                    <StackPanel x:Name="item" Orientation="Horizontal" Width="2048">
                        <Image x:Name="icon"
                               Source="album.png" />
                        <Label x:Name="sourceName"
                               Content="{Binding Name}"
                               Foreground="White"
                               Height="32"
                               VerticalContentAlignment="Center"/>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsSelected}"
                                     Value="True">
                            <Setter TargetName="icon"
                                    Property="Source"
                                    Value="{StaticResource SelectedIcon}" />
                            <Setter TargetName="sourceName"
                                    Property="Foreground"
                                    Value="Black"/>
							<Setter TargetName="item"
                                    Property="Background"
                                    Value="#FFD4D4D3" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </HierarchicalDataTemplate.ItemTemplate>
        </HierarchicalDataTemplate>
    </TreeView.ItemTemplate>
</TreeView>